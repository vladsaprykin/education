1)
  числовой (англ. Number),
  строковый (англ. String),
  логический (англ. Boolean),
  нулевой (англ. Null),
  неопределённый (англ. Undefined).
2)
= присвоение значение
=== и == строгое и не строгое сравнение
3)
под разные задачи разные циклы
break чтобы выйти заранее из цикла
continue перейти к следующей итерации
4)
объявленные при помощи var , имеют глобальную или локальную (в рамках функции) область видимости.
Если вы объявляете переменные с использованием let или const , их область видимости будет блочной
5)
let a // undefiend
let a = 10 // a = 10
6)
Если значением свойства является функция, то её можно назвать методом объекта.
7)
Как создать новую переменную и записать туда число? Какие группы значений для чисел существуют?
 Какие специальные значения для чисел существуют? Как получить эти специальные значения?
 Как эти специальные значения ведут себя в математических операциях?
7.1
let a = 10, обычные числа и BigInt
7.2
Infinity представляет собой математическую бесконечность.
NaN означает вычислительную ошибку.
8)
Math.pow, Math.sqrt, Math.ceil, Math.round, Math.flour
Math является встроенным объектом, хранящим в своих свойствах и методах различные математические константы и функции
9)
parseInt  принимает строку в качестве аргумента и возвращает целое число в соответствии с указанным основанием системы счисления.
parseFloat принимает строку в качестве аргумента и возвращает десятичное число
10)
Math.round округление до целого
toFixed(знаков после запятой)
Math.ceil, Math.flour
11)
let str = 'string'
12)
console.log(str[2])
13)
замена символа через string.replace
14)
let a = 12
a += ''
a // string
15)
string.length
16)
string.match
17)
string.substring(0, 3)
18)
toUpperCase(),toLowerCase()
19)
string.split()
20)
let bool = true;
21)
Строковое, численное
22)
&& и
|| или
! не
23)
undefined представляет значение переменной, которая ещё не была инициализирована,
а null — намеренное отсутствие объекта.
24)
Объекты же используются для хранения коллекций различных значений и более сложных сущностей.
let user = {};
user.email = 'test@mail.ru'
обратится по ключу объекта и поменять значение
delete user[email]
через квадратные скобки
25)
Ссылочные типы данных Ссылочный тип данных (указатели) предназначен для обеспечения возможности указания на другие данные.
Указатели характерны для языков процедурного типа, в которых есть понятие области памяти для хранения данных.
26)
let array = [];
да может
27)
unshift() в начало
push() в конец
28)
arr.pop() удаляет последний элемент
arr.shift() удаляет первый элемент
29)
arr.length
30)
arr.indexOf('555')
31)
arr.join(',')
32)
array.splice()
33)
splice()
34)
Важен
Все аргументы функции находятся в псевдомассиве arguments под своими порядковыми номерами.
35)
var now = new Date(); // Mon Aug 02 2021 13:58:11 GMT+0300 (Moscow Standard Time)
var date = new Date(2011, 0, 1, 2, 3, 4, 567); // 1.01.2011, 02:03:04.567
36)
function sayHi() {
}

setTimeout(sayHi, 10500);
37)
Json - текстовый формат обмена данными, основанный на JavaScript.
JSON.stringify
JSON.parse
38)
try {
   // создание исключения
}
catch (e) {
   // инструкции для обработки ошибок
}
39)
События мыши:

click – происходит, когда кликнули на элемент левой кнопкой мыши (на устройствах с сенсорными экранами оно происходит при касании).
contextmenu – происходит, когда кликнули на элемент правой кнопкой мыши.
mouseover / mouseout – когда мышь наводится на / покидает элемент.
mousedown / mouseup – когда нажали / отжали кнопку мыши на элементе.
mousemove – при движении мыши.
События на элементах управления:

submit – пользователь отправил форму <form>.
focus – пользователь фокусируется на элементе, например нажимает на <input>.
Клавиатурные события:

keydown и keyup – когда пользователь нажимает / отпускает клавишу.
События документа:

DOMContentLoaded – когда HTML загружен и обработан, DOM документа полностью построен и доступен.
CSS events:

transitionend – когда CSS-анимация завершена.
40)
event.preventDefault()
41)
В соответствии с объектной моделью документа («Document Object Model», коротко DOM), каждый HTML-тег является объектом.
Вложенные теги являются «детьми» родительского элемента.
Текст, который находится внутри тега, также является объектом.
42)
let newDiv = document.createElement("div");
     newDiv.innerHTML = "<h1>Привет!</h1>";
document.body.insertBefore(newDiv,body)
43)
Объект Window является центром прикладных интерфейсов клиентского JavaScript
Объект location содержит информацию о расположении текущей веб-страницы: URL, информацию о сервере, номер порта, протокол.
Каждая веб-страница, которая загружается в браузер, имеет свой собственный объект document. Интерфейс документа служит точкой входа для получения содержимого веб-страницы (всего DOM - дерева, включая такие элементы как <body> и <table> (en-US)), а также обеспечивает функциональность, которая является глобальной для документа, например, для получения URL-адреса страницы или создания новых элементов в документе).
